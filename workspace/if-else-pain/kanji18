#!/usr/bin/env python3

import sys

def evaluate_condition(cond, variables):
    try:
        return eval(cond, {}, variables)
    except Exception as e:
        print(f"❌ Condition Error: {e}")
        return False

def execute_block(lines, variables):
    for line in lines:
        line = line.strip()
        if line.startswith("print(") and line.endswith(")"):
            try:
                print(eval(line[6:-1], {}, variables))
            except Exception as e:
                print(f"❌ Print Error: {e}")
        elif "=" in line:
            var, val = map(str.strip, line.split("=", 1))
            try:
                variables[var] = eval(val, {}, variables)
            except Exception as e:
                print(f"❌ Assign Error: {e}")

def parse_script(lines):
    i = 0
    variables = {}
    while i < len(lines):
        line = lines[i].strip()
        if line.startswith("if ") or line.startswith("elif ") or line.startswith("else"):
            block_type = line.split()[0]
            condition = line[3:-1].strip() if block_type != "else" else None
            i += 1
            block = []
            while i < len(lines) and lines[i].startswith("    "):
                block.append(lines[i][4:])
                i += 1

            if block_type == "if" and evaluate_condition(condition, variables):
                execute_block(block, variables)
                # skip elif/else
                while i < len(lines) and (lines[i].strip().startswith("elif") or lines[i].strip().startswith("else")):
                    i += 1
            elif block_type == "elif" and evaluate_condition(condition, variables):
                execute_block(block, variables)
                # skip remaining elif/else
                while i < len(lines) and lines[i].strip().startswith(("elif", "else")):
                    i += 1
            elif block_type == "else":
                execute_block(block, variables)
                while i < len(lines) and lines[i].strip().startswith(("elif", "else")):
                    i += 1
            else:
                # skip this block
                while i < len(lines) and lines[i].startswith("    "):
                    i += 1
        else:
            if line:
                execute_block([line], variables)
            i += 1

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python3 kanji.py <file>")
        sys.exit(1)

    with open(sys.argv[1], "r") as f:
        lines = f.readlines()

    parse_script(lines)
