#!/usr/bin/env python3
import sys
import subprocess

if len(sys.argv) < 4 or sys.argv[2] != "-o":
    print("Usage: nasm <input.py> -o <output>")
    sys.exit(1)

input_file = sys.argv[1]
output_file = sys.argv[3]

with open(input_file) as f:
    lines = [l.strip() for l in f if l.strip() and not l.strip().startswith("#")]

variables = {}
data_section = []
text_section = [
    "    .text",
    "    .global _start",
    "_start:"
]

def convert_value(val):
    if val.startswith('"') or val.startswith("'"):
        return val.strip('"').strip("'") + "\\n"
    elif val.lower() in ["true", "false"]:
        return val.capitalize() + "\\n"
    elif "." in val:
        return str(float(val)) + "\\n"
    else:
        return str(int(val)) + "\\n"

for line in lines:
    if "=" in line:
        name, value = [x.strip() for x in line.split("=", 1)]
        converted = convert_value(value)
        label = f"str_{name}"
        variables[name] = label
        data_section.append(f"{label}: .ascii \"{converted}\"")
        data_section.append(f"len_{name} = . - {label}")
    elif line.startswith("print(") and line.endswith(")"):
        var = line[6:-1].strip()
        if var not in variables:
            print(f"❌ Unknown variable: {var}")
            sys.exit(1)
        label = variables[var]
        text_section += [
            "    mov x0, #1",
            f"    adr x1, {label}",
            f"    mov x2, len_{var}",
            "    mov x8, #64",
            "    svc #0"
        ]

# exit syscall
text_section += [
    "    mov x0, #0",
    "    mov x8, #93",
    "    svc #0"
]

asm = "\n".join([
    "    .data",
    *data_section,
    "",
    *text_section
])

with open("out.s", "w") as f:
    f.write(asm + "\n")

subprocess.run(["as", "-o", "out.o", "out.s"], check=True)
subprocess.run(["ld", "out.o", "-o", output_file], check=True)

print(f"✅ Compiled to {output_file}")
